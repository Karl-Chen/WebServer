@* @model IEnumerable<MyModel_DBFirst.Models.tStudent> *@
@model MyModel_DBFirst.ViewModels.VMtStudent
@{
    ViewData["Title"] = "學生資料";
}

<h1>@ViewData["Title"]</h1>


<div class="row mt-3">
    <div class="col-3">
        @* 科系資料 *@
        <h3 class="text-center">科系</h3>
        <div>
            @foreach (var item in Model.Departments)
            {
                @* <a class="list-group-item text-center" href="Mystudents/Index?deptid=@item.DeptID">@item.DeptName</a> *@
                var count = 0;
                if (item.students != null)
                {
                    count = item.students.Count();                    
                }
                <a class="list-group-item text-center" asp-action="Index" asp-route-deptid="@item.DeptID">@(item.DeptName)(@count)</a>
            }
        </div>
    </div>
    <div class="col-9">
        @* 學生資料 *@
        <h3 class="text-center"><span class="alert-danger">@ViewBag.DeptName</span>學生資料管理</h3>
        <p>
            <a class="btn btn-info" asp-route-deptid="@ViewBag.DeptID" asp-action="Create">新增學生資料</a>
        </p>
        @if (Model.Students.Count() == 0)
        {
            <h1 class="text-danger text-center">@ViewData["ErrMsg"]</h1>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(Model => Model.Students.FirstOrDefault().fStuId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(Model => Model.Students.FirstOrDefault().fName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(Model => Model.Students.FirstOrDefault().fEmail)
                        </th>
                        <th>
                            @Html.DisplayNameFor(Model => Model.Students.FirstOrDefault().fScore)
                        </th>
                        <th>資料管理</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Students)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.fStuId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.fName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.fEmail)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.fScore)
                            </td>
                            <td class="d-flex">
                                <a asp-action="Edit" asp-route-id="@item.fStuId" asp-route-deptid="@item.DeptID" class="btn btn-warning">編輯</a> |
                                @* <a asp-action="Delete" asp-route-id="@item.fStuId" class="btn btn-danger" onclick="return confirm('您確定要刪除 @(item.fStuId+item.fName) 資料嗎？')">刪除</a> *@
                                @* 4.5.2 將Index的Delete改為Form，以Post方式送出 *@
                                <form asp-action="Delete">
                                    <input type="hidden" value="@item.fStuId" name="id" />
                                    <input type="hidden" value="@item.DeptID" name="deptid" />
                                    <input class="btn btn-danger" type="submit" value="刪除" onclick="return confirm('您確定要刪除 @(item.fStuId+item.fName) 資料嗎？')" />

                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>
